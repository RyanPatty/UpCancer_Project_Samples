AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  auth_v2

  Sample SAM Template for auth_v2

Globals:
  Function:
    Timeout: 30

Resources:
  UserRegistrationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambda-functions/
      Handler: registerLambda.registerUser
      Runtime: nodejs18.x
      Environment:
        Variables:
          DYNAMODB_TABLE: AppDataTable
          JWT_SECRET: your_jwt_secret
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBCrudPolicy:
            TableName: AppDataTable
      Events:
        UserRegistration:
          Type: Api
          Properties:
            Path: /register
            Method: post
            RestApiId: !Ref MyApi

  UserLoginFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambda-functions/
      Handler: loginLambda.loginUser
      Runtime: nodejs18.x
      Environment:
        Variables:
          DYNAMODB_TABLE: AppDataTable
          JWT_SECRET: your_jwt_secret
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBCrudPolicy:
            TableName: AppDataTable
      Events:
        UserLogin:
          Type: Api
          Properties:
            Path: /login
            Method: post
            RestApiId: !Ref MyApi

  SendVerificationEmailFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambda-functions/
      Handler: emailLambda.sendVerificationEmail
      Runtime: nodejs18.x
      Environment:
        Variables:
          DYNAMODB_TABLE: AppDataTable
          JWT_SECRET: your_jwt_secret
          SES_REGION: us-east-1
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBCrudPolicy:
            TableName: AppDataTable
        - Statement:
            Effect: Allow
            Action:
              - ses:SendEmail
              - ses:SendRawEmail
            Resource: "*"
      Events:
        SendVerificationEmail:
          Type: Api
          Properties:
            Path: /send-verification-email
            Method: post
            RestApiId: !Ref MyApi

  VerifyEmailFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambda-functions/
      Handler: emailLambda.verifyEmail
      Runtime: nodejs18.x
      Environment:
        Variables:
          DYNAMODB_TABLE: AppDataTable
          JWT_SECRET: your_jwt_secret
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBCrudPolicy:
            TableName: AppDataTable
      Events:
        VerifyEmail:
          Type: Api
          Properties:
            Path: /verify-email
            Method: post
            RestApiId: !Ref MyApi

  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: "'OPTIONS,POST,GET'"
        AllowHeaders: "'Content-Type,Authorization'"
        AllowOrigin: "'*'"

  AppDataTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: AppDataTable
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST

Outputs:
  UserRegistrationFunctionApi:
    Description: "API Gateway endpoint URL for User Registration function"
    Value: !Sub "https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/register/"
  UserRegistrationFunction:
    Description: "User Registration Lambda Function ARN"
    Value: !GetAtt UserRegistrationFunction.Arn
  UserRegistrationFunctionIamRole:
    Description: "Implicit IAM Role created for User Registration function"
    Value: !GetAtt UserRegistrationFunctionRole.Arn
  UserLoginFunctionApi:
    Description: "API Gateway endpoint URL for User Login function"
    Value: !Sub "https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/login/"
  UserLoginFunction:
    Description: "User Login Lambda Function ARN"
    Value: !GetAtt UserLoginFunction.Arn
  UserLoginFunctionIamRole:
    Description: "Implicit IAM Role created for User Login function"
    Value: !GetAtt UserLoginFunctionRole.Arn
  SendVerificationEmailFunctionApi:
    Description: "API Gateway endpoint URL for Send Verification Email function"
    Value: !Sub "https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/send-verification-email/"
  SendVerificationEmailFunction:
    Description: "Send Verification Email Lambda Function ARN"
    Value: !GetAtt SendVerificationEmailFunction.Arn
  SendVerificationEmailFunctionIamRole:
    Description: "Implicit IAM Role created for Send Verification Email function"
    Value: !GetAtt SendVerificationEmailFunctionRole.Arn
  VerifyEmailFunctionApi:
    Description: "API Gateway endpoint URL for Verify Email function"
    Value: !Sub "https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/verify-email/"
  VerifyEmailFunction:
    Description: "Verify Email Lambda Function ARN"
    Value: !GetAtt VerifyEmailFunction.Arn
  VerifyEmailFunctionIamRole:
    Description: "Implicit IAM Role created for Verify Email function"
    Value: !GetAtt VerifyEmailFunctionRole.Arn